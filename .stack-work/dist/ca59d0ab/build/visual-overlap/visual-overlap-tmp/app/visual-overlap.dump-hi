
==================== FINAL INTERFACE ====================
2017-09-17 02:25:19.8852377 UTC

interface main@main:Main 8002
  interface hash: a5683ba51b7c29b88ebb7b8bef367386
  ABI hash: 42e43357b6b014ad3758d132183a5ef1
  export-list hash: 8593b322942bb131369fba153e19cba7
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: adc2a119b787a6f09932ee0817306d1a
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.explain
  Main.input
  Main.insist
  Main.main
  Main.run
  Main.setup
  Main.window
  Main.~>
  Main.App{Main.App fInput fWindow}
module dependencies:
package dependencies: FontyFruity-0.5.3.3@FontyFruity-0.5.3.3-6SJ2TAYdyZb2Ux76v8Rzn
                      GLFW-b-1.4.8.1@GLFW-b-1.4.8.1-1V1u4vvq5bWIFWVhVPjY4A
                      GLURaw-2.0.0.3@GLURaw-2.0.0.3-Dsh0J6RJGCYIX4KzhPpy5R
                      JuicyPixels-3.2.8.3@JuicyPixels-3.2.8.3-5IOlo1rE8WxAfqhWPTAe4N
                      MonadRandom-0.5.1@MonadRandom-0.5.1-6uvIhB08u1RHnyKFfb2cRN
                      ObjectName-1.1.0.1@ObjectName-1.1.0.1-EiFOWjUQWWuLyOhtrmuIWX
                      OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa
                      OpenGLRaw-3.2.5.0@OpenGLRaw-3.2.5.0-8JxKpZbO2kWCx46iLc1G4X
                      Rasterific-0.7.2.1@Rasterific-0.7.2.1-LMbKW5etcO2FqIPc0tDI23
                      StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      Win32-2.3.1.1@Win32-2.3.1.1
                      adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw
                      binary-0.8.3.0@binary-0.8.3.0
                      bindings-GLFW-3.1.2.2@bindings-GLFW-3.1.2.2-8A8NDyit2GUAksQpR7G7mj
                      bytes-0.15.3@bytes-0.15.3-JnJk9rvpCHsKPq5vbMmKHS
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      call-stack-0.1.0@call-stack-0.1.0-FYVrCPXGP9EGAuTW32963O
                      cereal-0.5.4.0@cereal-0.5.4.0-BsAGxfp8yAs3CiRo2E875e
                      comonad-5.0.2@comonad-5.0.2-Fq9Xy9jdx6uIyJZn00E6Yc
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-29zF0Im431177ovfbHYCGv
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      distributive-0.5.3@distributive-0.5.3-IX4kyVcHAyoH4uFYrsjY1R
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      either-4.4.1.1@either-4.4.1.1-6PiwKYkn4v6B4KO2R2Fu1b
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      filepath-1.4.1.1@filepath-1.4.1.1
                      fixed-0.2.1.1@fixed-0.2.1.1-8Jr82l0kss5Gr4nEevmXlZ
                      free-4.12.4@free-4.12.4-C2gBQV0m8J42HxqSLTFyVx
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      half-0.2.2.3@half-0.2.2.3-GHJ372Ls7FBA3PAGtGHfOR
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX
                      lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW
                      linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p
                      linear-aabb-0.1.0.0@linear-aabb-0.1.0.0-FKS3bcYwI7gItIwXlgJNo2
                      microlens-0.4.8.1@microlens-0.4.8.1-BVhsezHoPw9Ez18LAXVtpM
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l
                      monad-loops-0.4.3@monad-loops-0.4.3-ERCN4ZKCeeS5SRhwqXsLBP
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-BhL9U5k7NtGJn1itwIHt2Y
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      profunctors-5.2.1@profunctors-5.2.1-Ga89Nyw0d7LBEIoX4AZ6gT
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4
                      safe-exceptions-0.1.6.0@safe-exceptions-0.1.6.0-8HmohVTen8f1fXhFM1N1R3
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      semigroupoids-5.2.1@semigroupoids-5.2.1-Db8txM8kTsI6Y49CY6g5Jn
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      th-abstraction-0.2.6.0@th-abstraction-0.2.6.0-HRFJgpoqs5HJ5LgHnjmMhQ
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-GKSs0LKukAL8ymq2naFmrH
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
                      vector-algorithms-0.7.0.1@vector-algorithms-0.7.0.1-1qlx0Hst1Fo5WZd0lT7Iw1
                      xml-1.3.14@xml-1.3.14-AKug8Ud7K0VEhc87tBwsGy
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: GLFW-b-1.4.8.1@GLFW-b-1.4.8.1-1V1u4vvq5bWIFWVhVPjY4A:Graphics.UI.GLFW.Types
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.Instances
         reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4:Data.Reflection
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: GLFW-b-1.4.8.1@GLFW-b-1.4.8.1-1V1u4vvq5bWIFWVhVPjY4A:Graphics.UI.GLFW.Types
                         JuicyPixels-3.2.8.3@JuicyPixels-3.2.8.3-5IOlo1rE8WxAfqhWPTAe4N:Codec.Picture.Tga
                         JuicyPixels-3.2.8.3@JuicyPixels-3.2.8.3-5IOlo1rE8WxAfqhWPTAe4N:Codec.Picture.Tiff
                         JuicyPixels-3.2.8.3@JuicyPixels-3.2.8.3-5IOlo1rE8WxAfqhWPTAe4N:Codec.Picture.Types
                         MonadRandom-0.5.1@MonadRandom-0.5.1-6uvIhB08u1RHnyKFfb2cRN:Control.Monad.Trans.Random.Lazy
                         Rasterific-0.7.2.1@Rasterific-0.7.2.1-LMbKW5etcO2FqIPc0tDI23:Graphics.Rasterific.Compositor
                         adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp:Data.Functor.Rep
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Biff
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Clown
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Fix
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Flip
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Join
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Joker
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Product
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Sum
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Tannen
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Wrapped
                         bytes-0.15.3@bytes-0.15.3-JnJk9rvpCHsKPq5vbMmKHS:Data.Bytes.Get
                         bytes-0.15.3@bytes-0.15.3-JnJk9rvpCHsKPq5vbMmKHS:Data.Bytes.Signed
                         bytes-0.15.3@bytes-0.15.3-JnJk9rvpCHsKPq5vbMmKHS:Data.Bytes.VarInt
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         either-4.4.1.1@either-4.4.1.1-6PiwKYkn4v6B4KO2R2Fu1b:Control.Monad.Trans.Either
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX:Data.Functor.Day
                         kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX:Data.Functor.Yoneda
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.At
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Internal.Indexed
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Reified
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Tuple
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Wrapped
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Zoom
                         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.Plucker
                         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.Quaternion
                         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.V
                         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.V0
                         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.V1
                         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.V2
                         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.V3
                         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.V4
                         microlens-0.4.8.1@microlens-0.4.8.1-BVhsezHoPw9Ez18LAXVtpM:Lens.Micro.Internal
                         monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l:Control.Monad.Trans.Control
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         profunctors-5.2.1@profunctors-5.2.1-Ga89Nyw0d7LBEIoX4AZ6gT:Data.Profunctor.Rep
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         th-abstraction-0.2.6.0@th-abstraction-0.2.6.0-HRFJgpoqs5HJ5LgHnjmMhQ:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  GLFW-b-1.4.8.1@GLFW-b-1.4.8.1-1V1u4vvq5bWIFWVhVPjY4A:Graphics.UI.GLFW 9b039042b65c0b0b669c3ec1bde1abcb
import  -/  GLFW-b-1.4.8.1@GLFW-b-1.4.8.1-1V1u4vvq5bWIFWVhVPjY4A:Graphics.UI.GLFW.Types 6eba9fe2850fbbb76c3737f6a45c8a3c
import  -/  OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa:Graphics.Rendering.OpenGL ac082665cbb76b49aeeba80221c5d2ff
import  -/  Rasterific-0.7.2.1@Rasterific-0.7.2.1-LMbKW5etcO2FqIPc0tDI23:Graphics.Rasterific da5985dd7ae04a989bbfbcf0106cd865
import  -/  base-4.9.1.0:Control.Applicative 2c56a0c43327cbbcb6e7a55bf05443c9
import  -/  base-4.9.1.0:Control.Monad.IO.Class 3f1875e753ac8c44dae64dc062ea742e
import  -/  base-4.9.1.0:Data.Either 186ef9adf6b47e24f39efe9b2e18e352
import  -/  base-4.9.1.0:Data.Maybe ecf0c6f81372d9b58b142d5e758ea51b
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  base-4.9.1.0:System.IO 5daf3f384209c11d9566e3409af8ec5d
import  -/  either-4.4.1.1@either-4.4.1.1-6PiwKYkn4v6B4KO2R2Fu1b:Control.Monad.Trans.Either 024925498cf0eedd1ab84529eac9ea7c
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear 03f09b136a46b227aed4708d8d91419c
import  -/  linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.V2 a67c99c5a1f39948af0b2c131863c121
import  -/  linear-aabb-0.1.0.0@linear-aabb-0.1.0.0-FKS3bcYwI7gItIwXlgJNo2:Data.AABB 56e99870b53ed95f69960c170ff616e3
import  -/  microlens-0.4.8.1@microlens-0.4.8.1-BVhsezHoPw9Ez18LAXVtpM:Lens.Micro 1df5b52bb4f60ef571f1a717ce94a3d6
import  -/  microlens-0.4.8.1@microlens-0.4.8.1-BVhsezHoPw9Ez18LAXVtpM:Lens.Micro.Type 1ff53c7b4992a3bf638900edd070d0c2
import  -/  monad-loops-0.4.3@monad-loops-0.4.3-ERCN4ZKCeeS5SRhwqXsLBP:Control.Monad.Loops 5dafec9c911894263d239bb17a2b83ad
import  -/  safe-exceptions-0.1.6.0@safe-exceptions-0.1.6.0-8HmohVTen8f1fXhFM1N1R3:Control.Exception.Safe ff8a1d779ba91f800777e88ca7ef2c6e
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM.TChan 64612af800e1a2e6674a1b1a89b35a5e
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Class 953c05e2bceca1b256a90a052f7c1b62
d37897fc755f88d25f330f5ab9ddba4d
  $tc'App :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7051572146787704749##
                   5871644046012494277##
                   Main.$trModule
                   Main.$tc'App1) -}
3e5138cdbdb99070f2c9ac6cd4264c08
  $tc'App1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'App"#) -}
edc549220978c2ad9ab2d2764962e02d
  $tcApp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14970973039056183339##
                   3406116951977320360##
                   Main.$trModule
                   Main.$tcApp1) -}
9ac977a6d6449deed74480371ebd14d8
  $tcApp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "App"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
5a57d5c98c9e3c4278f6f77efeeb138e
  $wk ::
    GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either [GHC.Types.Char] () #)
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case {__pkg_ccall_GC bindings-GLFW-3.1.2.2@bindings-GLFW-3.1.2.2-8A8NDyit2GUAksQpR7G7mj glfwSwapBuffers GHC.Prim.Addr#
                                                                                                                         -> GHC.Prim.State#
                                                                                                                              GHC.Prim.RealWorld
                                                                                                                         -> (# GHC.Prim.State#
                                                                                                                                 GHC.Prim.RealWorld #)}
                        ww
                        w of wild { Unit# ds3 ->
                 case {__pkg_ccall_GC bindings-GLFW-3.1.2.2@bindings-GLFW-3.1.2.2-8A8NDyit2GUAksQpR7G7mj glfwPollEvents GHC.Prim.State#
                                                                                                                          GHC.Prim.RealWorld
                                                                                                                        -> (# GHC.Prim.State#
                                                                                                                                GHC.Prim.RealWorld #)}
                        ds3 of wild1 { Unit# ds1 ->
                 case Graphics.UI.GLFW.storedScheduledCallbacks
                        `cast`
                      (GHC.IORef.N:IORef[0] <Graphics.UI.GLFW.ScheduledCallbacks>_N) of wild2 { GHC.STRef.STRef r# ->
                 case GHC.Prim.atomicModifyMutVar#
                        @ GHC.Prim.RealWorld
                        @ Graphics.UI.GLFW.ScheduledCallbacks
                        @ (Graphics.UI.GLFW.ScheduledCallbacks,
                           GHC.Base.Maybe (GHC.Types.IO ()))
                        @ (GHC.Base.Maybe (GHC.Types.IO ()))
                        r#
                        Graphics.UI.GLFW.pollEvents4
                        ds1 of ds2 { (#,#) ipv ipv1 ->
                 case Graphics.UI.GLFW.pollEvents2
                        ipv1
                        ipv of ds4 { (#,#) ipv2 ipv3 ->
                 letrec {
                   go :: GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                               Data.Either.Either [GHC.Types.Char] [()] #)
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     case {__pkg_ccall_GC bindings-GLFW-3.1.2.2@bindings-GLFW-3.1.2.2-8A8NDyit2GUAksQpR7G7mj glfwWindowShouldClose GHC.Prim.Addr#
                                                                                                                                   -> GHC.Prim.State#
                                                                                                                                        GHC.Prim.RealWorld
                                                                                                                                   -> (# GHC.Prim.State#
                                                                                                                                           GHC.Prim.RealWorld,
                                                                                                                                         GHC.Prim.Int# #)}
                            ww
                            s of wild3 { (#,#) ds5 ds6 ->
                     case GHC.Prim.narrow32Int# ds6 of wild4 {
                       DEFAULT
                       -> case Graphics.UI.GLFW.C.$fCCIntBool3 wild4
                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                    Data.Either.Either [GHC.Types.Char] [()] #)
                          of {}
                       0#
                       -> case {__pkg_ccall_GC bindings-GLFW-3.1.2.2@bindings-GLFW-3.1.2.2-8A8NDyit2GUAksQpR7G7mj glfwSwapBuffers GHC.Prim.Addr#
                                                                                                                                  -> GHC.Prim.State#
                                                                                                                                       GHC.Prim.RealWorld
                                                                                                                                  -> (# GHC.Prim.State#
                                                                                                                                          GHC.Prim.RealWorld #)}
                                 ww
                                 ds5 of wild5 { Unit# ds7 ->
                          case {__pkg_ccall_GC bindings-GLFW-3.1.2.2@bindings-GLFW-3.1.2.2-8A8NDyit2GUAksQpR7G7mj glfwPollEvents GHC.Prim.State#
                                                                                                                                   GHC.Prim.RealWorld
                                                                                                                                 -> (# GHC.Prim.State#
                                                                                                                                         GHC.Prim.RealWorld #)}
                                 ds7 of wild6 { Unit# ds8 ->
                          case GHC.Prim.atomicModifyMutVar#
                                 @ GHC.Prim.RealWorld
                                 @ Graphics.UI.GLFW.ScheduledCallbacks
                                 @ (Graphics.UI.GLFW.ScheduledCallbacks,
                                    GHC.Base.Maybe (GHC.Types.IO ()))
                                 @ (GHC.Base.Maybe (GHC.Types.IO ()))
                                 r#
                                 Graphics.UI.GLFW.pollEvents4
                                 ds8 of ds9 { (#,#) ipv4 ipv5 ->
                          case Graphics.UI.GLFW.pollEvents2
                                 ipv5
                                 ipv4 of ds10 { (#,#) ipv6 ipv7 ->
                          case go ipv6 of ds11 { (#,#) ipv8 ipv9 ->
                          case ipv9 of wild7 {
                            Data.Either.Left l -> ds11
                            Data.Either.Right r
                            -> (# ipv8,
                                  Data.Either.Right
                                    @ [GHC.Types.Char]
                                    @ [()]
                                    (GHC.Types.: @ () ipv7 r) #) } } } } } }
                       1# -> (# ds5, Main.main5 #) } }
                 } in
                 case go ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                 case ipv5 of wild3 {
                   Data.Either.Left l
                   -> (# ipv4, Data.Either.Left @ [GHC.Types.Char] @ () l #)
                   Data.Either.Right r -> (# ipv4, Main.main4 #) } } } } } } }) -}
24b94f232aac56efa462812e69e7f479
  data App
    = App {fInput :: (), fWindow :: Graphics.UI.GLFW.Types.Window}
36436be87e9e6baa19613ec70184164b
  explain ::
    GHC.Base.Monad m =>
    e -> GHC.Base.Maybe a -> Control.Monad.Trans.Either.EitherT e m a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(A,A,A,C(U),A)><L,U>,
     Unfolding: (\ @ (m :: * -> *)
                   @ e
                   @ a
                   ($dMonad :: GHC.Base.Monad m)
                   (e1 :: e) ->
                 let {
                   n :: m (Data.Either.Either e a)
                   = GHC.Base.return
                       @ m
                       $dMonad
                       @ (Data.Either.Either e a)
                       (Data.Either.Left @ e @ a e1)
                 } in
                 \ (ds1 :: GHC.Base.Maybe a) ->
                 case ds1 of wild {
                   GHC.Base.Nothing
                   -> n `cast`
                      (Sym (Control.Monad.Trans.Either.N:EitherT[0] <e>_N <m>_R <a>_N))
                   GHC.Base.Just x
                   -> Control.Monad.Trans.Either.$fApplicativeEitherT_$cpure
                        @ m
                        @ e
                        $dMonad
                        @ a
                        x }) -}
a16e5093f8823188c2f826c443511c0b
  fInput :: Main.App -> ()
  RecSel Left Main.App
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.App) ->
                 case ds of wild { Main.App ds1 ds2 -> ds1 }) -}
a0be9f6c1068a24331ecb2d117207985
  fWindow :: Main.App -> Graphics.UI.GLFW.Types.Window
  RecSel Left Main.App
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.App) ->
                 case ds of wild { Main.App ds1 ds2 -> ds2 }) -}
59bb86470df3824984ae4c01679617f9
  input :: Lens.Micro.Type.SimpleGetter Main.App ()
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ r ->
                 Lens.Micro.to @ Main.App @ () Main.fInput @ r) -}
d8311fcf2c2a029f12a227a943eabd48
  insist ::
    GHC.Base.Monad m =>
    GHC.Types.Bool -> e -> Control.Monad.Trans.Either.EitherT e m ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLC(S)L),1*U(A,A,A,1*C1(U),A)><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (m :: * -> *)
                   @ e
                   ($dMonad :: GHC.Base.Monad m)
                   (ds :: GHC.Types.Bool)
                   (e1 :: e) ->
                 case ds of wild {
                   GHC.Types.False
                   -> (GHC.Base.return
                         @ m
                         $dMonad
                         @ (Data.Either.Either e ())
                         (Data.Either.Left @ e @ () e1))
                        `cast`
                      (Sym (Control.Monad.Trans.Either.N:EitherT[0] <e>_N <m>_R <()>_N))
                   GHC.Types.True
                   -> (GHC.Base.return
                         @ m
                         $dMonad
                         @ (Data.Either.Either e ())
                         (Data.Either.Right @ e @ () GHC.Tuple.()))
                        `cast`
                      (Sym (Control.Monad.Trans.Either.N:EitherT[0]
                                <e>_N <m>_R <()>_N)) }) -}
da97994585c503be328d680e4ed05b4f
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
72858d9f518939b948a8cec02d47fe2a
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Main.main6 s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   Data.Either.Left l
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Show.$fShow[]_$s$cshow1 l)
                        GHC.Types.True
                        ipv
                   Data.Either.Right r
                   -> case r of ww { Main.App ww1 ww2 ->
                      case ww2
                             `cast`
                           (Graphics.UI.GLFW.Types.N:Window[0]) of ww3 { GHC.Ptr.Ptr ww4 ->
                      case Main.$wk ww4 ipv of ds2 { (#,#) ipv2 ipv3 ->
                      Main.main2 ipv2 ipv3 } } } } }) -}
ed1c08cdb798781484af7ffc3d9123f1
  main10 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 480#) -}
94e53d466f01548937e48bb570833a51
  main11 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 720#) -}
3aba4823646c85fe39c01f60e1142710
  main12 :: Data.Either.Either [GHC.Types.Char] Main.App
  {- Unfolding: (Data.Either.Left
                   @ [GHC.Types.Char]
                   @ Main.App
                   Main.main13) -}
87c81848eecf034815fac07ab02ac9e6
  main13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Failed to initialise GLFW"#) -}
607116290c82adf618ac3fc975ed9772
  main14 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
07539ecfaef766ad57359281bf43294c
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> Data.Either.Either GHC.Base.String ()
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,U><S,1*U>,
     Unfolding: (\ (ipv :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot]
                   (ipv1 :: Data.Either.Either GHC.Base.String ())[OneShot] ->
                 case ipv1 of wild {
                   Data.Either.Left x
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Show.$fShow[]_$s$cshow1 x)
                        GHC.Types.True
                        ipv
                   Data.Either.Right y
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main3
                        GHC.Types.True
                        ipv }) -}
1a384cf03aadef56f9542dc7593c4879
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Everything went according to plan"#) -}
955bc522c81d9153992b914f7a32eac8
  main4 :: Data.Either.Either [GHC.Types.Char] ()
  {- HasNoCafRefs,
     Unfolding: (Data.Either.Right
                   @ [GHC.Types.Char]
                   @ ()
                   GHC.Tuple.()) -}
ad521592d663911499ee552566e5f45b
  main5 :: Data.Either.Either [GHC.Types.Char] [()]
  {- HasNoCafRefs,
     Unfolding: (Data.Either.Right
                   @ [GHC.Types.Char]
                   @ [()]
                   (GHC.Types.[] @ ())) -}
e6b06e57db55dcdb87cc3e7e27664505
  main6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either [GHC.Types.Char] Main.App #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case {__pkg_ccall_GC bindings-GLFW-3.1.2.2@bindings-GLFW-3.1.2.2-8A8NDyit2GUAksQpR7G7mj glfwInit GHC.Prim.State#
                                                                                                                    GHC.Prim.RealWorld
                                                                                                                  -> (# GHC.Prim.State#
                                                                                                                          GHC.Prim.RealWorld,
                                                                                                                        GHC.Prim.Int# #)}
                        s of wild { (#,#) ds1 ds2 ->
                 case GHC.Prim.narrow32Int# ds2 of wild1 {
                   DEFAULT
                   -> case Graphics.UI.GLFW.C.$fCCIntBool3 wild1
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Data.Either.Either [GHC.Types.Char] Main.App #)
                      of {}
                   0# -> (# ds1, Main.main12 #)
                   1#
                   -> case Graphics.UI.GLFW.createWindow1
                             Main.main11
                             Main.main10
                             Main.main9
                             (GHC.Base.Nothing @ Graphics.UI.GLFW.Types.Monitor)
                             (GHC.Base.Nothing @ Graphics.UI.GLFW.Types.Window)
                             ds1 of ds4 { (#,#) ipv ipv1 ->
                      case ipv1 of wild2 {
                        GHC.Base.Nothing -> (# ipv, Main.main7 #)
                        GHC.Base.Just x
                        -> case x `cast`
                                (Graphics.UI.GLFW.Types.N:Window[0]) of ds5 { GHC.Ptr.Ptr ds6 ->
                           case {__pkg_ccall_GC bindings-GLFW-3.1.2.2@bindings-GLFW-3.1.2.2-8A8NDyit2GUAksQpR7G7mj glfwMakeContextCurrent GHC.Prim.Addr#
                                                                                                                                          -> GHC.Prim.State#
                                                                                                                                               GHC.Prim.RealWorld
                                                                                                                                          -> (# GHC.Prim.State#
                                                                                                                                                  GHC.Prim.RealWorld #)}
                                  ds6
                                  ipv of wild3 { Unit# ds3 ->
                           (# ds3,
                              Data.Either.Right
                                @ [GHC.Types.Char]
                                @ Main.App
                                (Main.App
                                   GHC.Tuple.()
                                   ds5
                                     `cast`
                                   (Sym (Graphics.UI.GLFW.Types.N:Window[0]))) #) } } } } } }) -}
1f184e253fdbd64bf89184829d8969b2
  main7 :: Data.Either.Either [GHC.Types.Char] Main.App
  {- Unfolding: (Data.Either.Left
                   @ [GHC.Types.Char]
                   @ Main.App
                   Main.main8) -}
85b3699514e7d66aa6c02839aae2e90f
  main8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Failed to create window"#) -}
0e505dfd4c1a1daab283b9a5603ea9ba
  main9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Visual Overlap"#) -}
d559a7470cefed6b422b2521050dd226
  run ::
    Control.Monad.Trans.Either.EitherT GHC.Base.String GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.run1
                  `cast`
                (Trans
                     (Sym (GHC.Types.N:IO[0]
                               <Data.Either.Either [GHC.Types.Char] ()>_R))
                     (Sym (Control.Monad.Trans.Either.N:EitherT[0]
                               <[GHC.Types.Char]>_N <GHC.Types.IO>_R <()>_N))) -}
1e103b1c321adcdc0ea0bfd71dd2fa00
  run1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either [GHC.Types.Char] () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Main.main6 s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   Data.Either.Left l
                   -> (# ipv, Data.Either.Left @ [GHC.Types.Char] @ () l #)
                   Data.Either.Right r -> Main.run2 r ipv } }) -}
154899b5a197badb0bff4a9f886e8602
  run2 ::
    Main.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either [GHC.Types.Char] () #)
  {- Arity: 2, Strictness: <S(LS(S)),1*U(A,1*U(U))><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Main.App)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Main.App ww1 ww2 ->
                 case ww2
                        `cast`
                      (Graphics.UI.GLFW.Types.N:Window[0]) of ww3 { GHC.Ptr.Ptr ww4 ->
                 Main.$wk ww4 w1 } }) -}
953a48114089a2987b3783e293360e52
  setup ::
    Control.Monad.Trans.Either.EitherT
      GHC.Base.String GHC.Types.IO Main.App
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main6
                  `cast`
                (Trans
                     (Sym (GHC.Types.N:IO[0]
                               <Data.Either.Either [GHC.Types.Char] Main.App>_R))
                     (Sym (Control.Monad.Trans.Either.N:EitherT[0]
                               <[GHC.Types.Char]>_N <GHC.Types.IO>_R <Main.App>_N))) -}
71dcfe60cacdf185c28b413e4efab4ea
  window ::
    Lens.Micro.Type.SimpleGetter Main.App Graphics.UI.GLFW.Types.Window
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ r ->
                 Lens.Micro.to
                   @ Main.App
                   @ Graphics.UI.GLFW.Types.Window
                   Main.fWindow
                   @ r) -}
0d248f3e5235933137e56aed3d6a5199
  (~>) :: s -> Lens.Micro.Type.Getting a s a -> a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><C(C(S)),1*C1(C1(U))>,
     Unfolding: InlineRule (0, True, True)
                (\ @ a @ s -> Lens.Micro.^. @ s @ a) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

